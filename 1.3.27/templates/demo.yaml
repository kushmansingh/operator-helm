---
{{ if .Values.demo }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.demoNamespace }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: hook-failed
    {{- if .Values.globalAnnotations }}
{{ toYaml .Values.globalAnnotations | indent 4}}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-server
  namespace: {{ .Values.demoNamespace }}
  annotations:
    sidecar.speedscale.com/inject: "true"
    sidecar.speedscale.com/tls-out: "true"
    helm.sh/hook: post-install
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: hook-failed
    {{- if .Values.globalAnnotations }}
{{ toYaml .Values.globalAnnotations | indent 4}}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-server
  template:
    metadata:
      labels:
        app: java-server
    spec:
      containers:
        - name: java-server
          image: gcr.io/speedscale-demos/java-server:1.0.0
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          ports:
            - containerPort: 8080
              name: http
          env:
          - name: JAVA_OPTS
            value: >-
              -Djavax.net.ssl.trustStore=/etc/ssl/speedscale/jks/cacerts.jks
              -Djavax.net.ssl.trustStorePassword=changeit
          - name: REQUEST_TAG
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: java-server
  namespace: {{ .Values.demoNamespace }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: hook-failed
    {{- if .Values.globalAnnotations }}
{{ toYaml .Values.globalAnnotations | indent 4}}
    {{- end }}
  labels:
    app: java-server
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: java-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-client
  namespace: {{ .Values.demoNamespace }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "2"
    helm.sh/hook-delete-policy: hook-failed
    {{- if .Values.globalAnnotations }}
{{ toYaml .Values.globalAnnotations | indent 4}}
    {{- end }}
  labels:
    app: java-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-client
  template:
    metadata:
      labels:
        app: java-client
    spec:
      initContainers:
      - name: check-server
        image: registry.gitlab.com/gitlab-ci-utils/curl-jq
        command:
        - bash
        - -c
        args:
        - |-
          for i in {1..300}
            do sleep 1
            if curl -m 1 -s http://${SERVER_URL}/healthz; then
              exit 0
            fi
          done
          exit 1
        env:
        - name: SERVER_URL
          value: java-server

      containers:
        - name: java-client
          image: registry.gitlab.com/gitlab-ci-utils/curl-jq
          imagePullPolicy: Always
          command:
          - bash
          - -c
          - /client
          env:
          - name: SERVER_URL
            value: java-server
          volumeMounts:
          - mountPath: "/client"
            name: "script"
            subPath: client
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 100Mi
      volumes:
      - name: script
        configMap:
          name: client-script
          defaultMode: 0777
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-script
  namespace: {{ .Values.demoNamespace }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "2"
    helm.sh/hook-delete-policy: hook-failed
    {{- if .Values.globalAnnotations }}
{{ toYaml .Values.globalAnnotations | indent 4}}
    {{- end }}
apiVersion: v1
data:
  client: |
    #!/usr/bin/env bash

    set -eou pipefail

    SERVER_URL=${SERVER_URL:-"localhost:8080"}
    token=""

    echo $SERVER_URL

    RED='\033[0;31m'
    BLUE='\033[0;34m'
    NC='\033[0m'

    login() {
        echo -e "${RED}Logging in ${NC}"
        token=$(curl -s -X POST -H "Content-Type: application/json" -d '{"username": "admin", "password": "pass" }' "${SERVER_URL}/login" | jq -r .token)
        echo -e "${RED}Token is ${token}${NC}"
        echo
    }

    launches() {
        echo -e "${BLUE}Getting launches ${NC}"
        curl -s -X GET -H "Authorization: Bearer ${token}" "${SERVER_URL}/spacex/launches"
        echo
        echo
    }

    random-ship() {
        echo -e "${BLUE}Getting random ship ${NC}"
        curl -s -X GET -H "Authorization: Bearer ${token}" "${SERVER_URL}/spacex/ship"
        echo
        echo
    }

    ship() {
        ships=("618fad7e563d69573ed8caa9" "614251b711a64135defb3654" "5ea6ed30080df4000697c916")
        id=${ships[ $RANDOM % ${#ships[@]} ]}

        echo -e "${BLUE}Getting ship ${id} ${NC}"
        curl -s -X GET -H "Authorization: Bearer ${token}" "${SERVER_URL}/spacex/ship/${id}"
        echo
        echo
    }

    interest() {
        echo -e "${BLUE}Getting max interest rate security ${NC}"
        curl -s -X GET -H "Authorization: Bearer ${token}" "${SERVER_URL}/treasury/max_interest"
        echo
        echo
    }

    random-sleep () {
        sleep $(( RANDOM % 3 ))
    }

    i=0
    while true; do
        if [[ $((i % 100)) == 0 ]]; then
            login
        fi

        launches
        random-sleep

        random-ship
        random-sleep

        ship
        random-sleep

        interest
        random-sleep
        i=$((i+1))
    done
{{ end }}
